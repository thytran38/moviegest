<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoBox01.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6
        KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8y
        BAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMA
        oI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6
        KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8y
        BAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMA
        oI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoI8yBAD6KEMAoIsnnvI/SG+ani+rCC4AAAAASUVORK5C
        YII=
</value>
  </data>
</root>